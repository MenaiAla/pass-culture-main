/* tslint:disable */
/* eslint-disable */
/**
 * pass Culture pro private API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';

import {
    BookingStatusFilter,
    BookingStatusFilterFromJSON,
    BookingStatusFilterFromJSONTyped,
    BookingStatusFilterToJSON,
} from './BookingStatusFilter';
import {
    OfferType,
    OfferTypeFromJSON,
    OfferTypeFromJSONTyped,
    OfferTypeToJSON,
} from './OfferType';

/**
 * 
 * @export
 * @interface ListBookingsQueryModel
 */
export interface ListBookingsQueryModel {
    /**
     * 
     * @type {string}
     * @memberof ListBookingsQueryModel
     */
    bookingPeriodBeginningDate?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ListBookingsQueryModel
     */
    bookingPeriodEndingDate?: string | null;
    /**
     * 
     * @type {BookingStatusFilter}
     * @memberof ListBookingsQueryModel
     */
    bookingStatusFilter?: BookingStatusFilter | null;
    /**
     * 
     * @type {string}
     * @memberof ListBookingsQueryModel
     */
    eventDate?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ListBookingsQueryModel
     */
    extra?: string;
    /**
     * 
     * @type {OfferType}
     * @memberof ListBookingsQueryModel
     */
    offerType?: OfferType | null;
    /**
     * 
     * @type {number}
     * @memberof ListBookingsQueryModel
     */
    page?: number;
    /**
     * 
     * @type {number}
     * @memberof ListBookingsQueryModel
     */
    venueId?: number | null;
}

export function ListBookingsQueryModelFromJSON(json: any): ListBookingsQueryModel {
    return ListBookingsQueryModelFromJSONTyped(json, false);
}

export function ListBookingsQueryModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListBookingsQueryModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bookingPeriodBeginningDate': !exists(json, 'bookingPeriodBeginningDate') ? undefined : json['bookingPeriodBeginningDate'],
        'bookingPeriodEndingDate': !exists(json, 'bookingPeriodEndingDate') ? undefined : json['bookingPeriodEndingDate'],
        'bookingStatusFilter': !exists(json, 'bookingStatusFilter') ? undefined : BookingStatusFilterFromJSON(json['bookingStatusFilter']),
        'eventDate': !exists(json, 'eventDate') ? undefined : json['eventDate'],
        'extra': !exists(json, 'extra') ? undefined : json['extra'],
        'offerType': !exists(json, 'offerType') ? undefined : OfferTypeFromJSON(json['offerType']),
        'page': !exists(json, 'page') ? undefined : json['page'],
        'venueId': !exists(json, 'venueId') ? undefined : json['venueId'],
    };
}

export function ListBookingsQueryModelToJSON(value?: ListBookingsQueryModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bookingPeriodBeginningDate': value.bookingPeriodBeginningDate,
        'bookingPeriodEndingDate': value.bookingPeriodEndingDate,
        'bookingStatusFilter': BookingStatusFilterToJSON(value.bookingStatusFilter),
        'eventDate': value.eventDate,
        'extra': value.extra,
        'offerType': OfferTypeToJSON(value.offerType),
        'page': value.page,
        'venueId': value.venueId,
    };
}

