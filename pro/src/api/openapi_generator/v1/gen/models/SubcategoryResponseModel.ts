/* tslint:disable */
/* eslint-disable */
/**
 * pass Culture pro private API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SubcategoryResponseModel
 */
export interface SubcategoryResponseModel {
    /**
     * 
     * @type {string}
     * @memberof SubcategoryResponseModel
     */
    appLabel: string;
    /**
     * 
     * @type {boolean}
     * @memberof SubcategoryResponseModel
     */
    canBeDuo: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SubcategoryResponseModel
     */
    canBeEducational: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SubcategoryResponseModel
     */
    canExpire: boolean;
    /**
     * 
     * @type {string}
     * @memberof SubcategoryResponseModel
     */
    categoryId: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof SubcategoryResponseModel
     */
    conditionalFields: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof SubcategoryResponseModel
     */
    id: string;
    /**
     * 
     * @type {boolean}
     * @memberof SubcategoryResponseModel
     */
    isDigitalDeposit: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SubcategoryResponseModel
     */
    isEvent: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SubcategoryResponseModel
     */
    isPhysicalDeposit: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SubcategoryResponseModel
     */
    isSelectable: boolean;
    /**
     * 
     * @type {string}
     * @memberof SubcategoryResponseModel
     */
    onlineOfflinePlatform: string;
    /**
     * 
     * @type {string}
     * @memberof SubcategoryResponseModel
     */
    proLabel: string;
    /**
     * 
     * @type {string}
     * @memberof SubcategoryResponseModel
     */
    reimbursementRule: string;
    /**
     * 
     * @type {string}
     * @memberof SubcategoryResponseModel
     */
    searchGroupName?: string | null;
}

export function SubcategoryResponseModelFromJSON(json: any): SubcategoryResponseModel {
    return SubcategoryResponseModelFromJSONTyped(json, false);
}

export function SubcategoryResponseModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubcategoryResponseModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'appLabel': json['appLabel'],
        'canBeDuo': json['canBeDuo'],
        'canBeEducational': json['canBeEducational'],
        'canExpire': json['canExpire'],
        'categoryId': json['categoryId'],
        'conditionalFields': json['conditionalFields'],
        'id': json['id'],
        'isDigitalDeposit': json['isDigitalDeposit'],
        'isEvent': json['isEvent'],
        'isPhysicalDeposit': json['isPhysicalDeposit'],
        'isSelectable': json['isSelectable'],
        'onlineOfflinePlatform': json['onlineOfflinePlatform'],
        'proLabel': json['proLabel'],
        'reimbursementRule': json['reimbursementRule'],
        'searchGroupName': !exists(json, 'searchGroupName') ? undefined : json['searchGroupName'],
    };
}

export function SubcategoryResponseModelToJSON(value?: SubcategoryResponseModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'appLabel': value.appLabel,
        'canBeDuo': value.canBeDuo,
        'canBeEducational': value.canBeEducational,
        'canExpire': value.canExpire,
        'categoryId': value.categoryId,
        'conditionalFields': value.conditionalFields,
        'id': value.id,
        'isDigitalDeposit': value.isDigitalDeposit,
        'isEvent': value.isEvent,
        'isPhysicalDeposit': value.isPhysicalDeposit,
        'isSelectable': value.isSelectable,
        'onlineOfflinePlatform': value.onlineOfflinePlatform,
        'proLabel': value.proLabel,
        'reimbursementRule': value.reimbursementRule,
        'searchGroupName': value.searchGroupName,
    };
}

